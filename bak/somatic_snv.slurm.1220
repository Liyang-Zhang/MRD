#!/bin/bash

#SBATCH --mail-type=end
#SBATCH --mail-user=zly18810602991@163.com
#SBATCH --job-name=test
#SBATCH --partition=small
#SBATCH -N 1
#SBATCH -J Strelka
#SBATCH --ntasks-per-node=4
#SBATCH --output=%j.o
#SBATCH --error=%j.e

# Initialize a variable with an intuitive name to store the name of the input fastq file

tumor=$1
normal=$2
project_dir=$3

# Data from Pfizer
baseSuper=`basename ${tumor} .tumor.1.bqsr.bam`
base=$(echo ${baseSuper} | cut -d'_' -f 1)  # get the filename with basename function
echo ${base}
echo ${tumor}
echo ${normal}

# Directory with reference genome
genome_19=/lustre/home/acct-medkwf/medkwf/database/GATK/hg19/ucsc.hg19.fasta

# Make dirs
mkdir -p ~/results/MRD/samtools/
mkdir -p ~/results/MRD/bam-readcount/
mkdir -p ~/results/MRD/Strelka/

# Set up output file names
bam=~/results/MRD/bam_19
varscan=~/results/MRD/varscan2
annovar=~/results/MRD/annovar
samtools=~/results/MRD/samtools
BRC=~/results/MRD/bam-readcount
Strelka=~/results/MRD/Strelka

# Set up file names
tumor_mpileup=${varscan}/${base}.tumor.mpileup
normal_mpileup=${varscan}/${base}.normal.mpileup
out_snv=${varscan}/${base}.somatic.vcf
filter_snv=${varscan}/${base}.filtersnv.vcf
normal_tumor_mpileup=${samtools}/${base}.normal-tumor.mpileup
tumor_sorted=${samtools}/${base}.sortedtumor.bam
normal_sorted=${samtools}/${base}.sortednormal.bam
filter_indel=${varscan}/${base}.filterindel.vcf
annovar_aviinput=${annovar}/${base}.snv
annovar_indel_aviinput=${annovar}/${base}.indel
annovar_merged_input=${annovar}/${base}.merge
annovar_annotated=${annovar}/${base}.csv
BRC_list=${BRC}/${base}.variants.sites
BRC_readcount=${BRC}/${base}.readcount
fpfilter=${varscan}/${base}.fpfilter

# Test files
filter_test=${varscan}/${base}.somatic5.vcf
annovar_aviinput_test=${annovar}/${base}.annovarinput.test
annovar_annotated_test=${annovar}/${base}.test.csv


# Set up the software environment
export IMAGE_NAME=/lustre/share/img/gatk-4.2.2.0.sif
module load picard
module load bwa
module load samtools

# specify the number of cores to use
cores=4

# Sort the bam files and mpileup into one file
# -q, --min-MQ INT Minimum mapping quality for an alignment to be used [0]
#samtools sort -o ${tumor_sorted} -@ $cores ${tumor}
#samtools sort -o ${normal_sorted} -@ $cores ${normal}
#samtools mpileup -f ${genome_19} -B ${normal_sorted} ${tumor_sorted} -Q 20 -q 20 > ${normal_tumor_mpileup}

# Use Varscan2
#java -jar ~/VarScan.v2.3.9.jar somatic \
#${normal_tumor_mpileup} \
#${out_snv} \
#--mpileup 1 \
#--output-vcf 1 \
#--min-coverage-normal 10 \
#--min-var-freq 0.01 \
#--tumor-purity 0.5

# Filter as recommended by official doc https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4278659/
# Region should be specified otherwise the output file is super large
#singularity exec /lustre/home/acct-medkwf/medkwf4/software/bam-readcount.sif bam-readcount \
#-q 20 \
#-b 20 \
#-w 100 \
#-f ${genome_19} \
#${tumor_sorted} > ${BRC_readcount}

#perl /lustre/home/acct-medkwf/medkwf4/software/fpfilter.pl ${BRC_readcount} --output-basename ${fpfilter}



# Somatic filter
#java -jar ~/VarScan.v2.3.9.jar somaticFilter ${out_snv}.snp --output-file ${filter_snv}
#java -jar ~/VarScan.v2.3.9.jar somaticFilter ${out_snv}.indel --output-file ${filter_indel}


# Use Strelka
#/lustre/home/acct-medkwf/medkwf4/software/strelka-2.9.2.centos6_x86_64/bin/configureStrelkaSomaticWorkflow.py \
#--normalBam ${normal} \
#--tumorBam ${tumor} \
#--referenceFasta ${genome_19} \
#--runDir ${Strelka} \
#--exome

/lustre/home/acct-medkwf/medkwf4/results/MRD/Strelka/runWorkflow.py -m local -j 20
#------------------------------------------------------------------------
# Filter manually before doing the annotation
#------------------------------------------------------------------------
# Get somatic mutation
#awk '{split($8,a,/;/); if (a[2]=="SOMATIC") print $0}' P042.filtersnv.vcf > P042.somatic1.vcf
#awk '{split($8,a,/;/); if (a[2]=="SOMATIC") print $0}' P042.filterindel.vcf >> P042.somatic1.vcf
# VAF <= 0.01 in germline sample
#awk '{split($10,a,/:/); gsub("%", "", a[6]);} a[6]+0 <= 1{print $0;}' P042.somaticresult.vcf > P042.somatic2.vcf
# VAF >= 5% in tumor sample
#awk '{split($11,a,/:/); gsub("%", "", a[6]);} a[6]+0 >= 5{print $0;}' P042.somatic2.vcf > P042.somatic3.vcf
# â‰¥30X positional depth in both tumour and germline
#awk '{split($10,a,/:/); split($11,b,/:/);}a[3]+0 >= 30 && b[3]+0 >= 30{print $0}' P042.somatic3.vcf > P042.somatic4.vcf
# Add header to the filtered vcf files
#grep "#" P042.filtersnv.vcf > P042.somatic5.vcf
#cat P042.somatic4.vcf >> P042.somatic5.vcf


# Annotation
#/lustre/home/acct-medkwf/medkwf4/software/annovar/convert2annovar.pl --format vcf4old --includeinfo --withzyg ${filter_test} > ${annovar_aviinput_test}
#/lustre/home/acct-medkwf/medkwf4/software/annovar/table_annovar.pl ${annovar_aviinput_test} /lustre/home/acct-medkwf/medkwf4/software/annovar/humandb -buildver hg19 -out ${annovar_annotated_test} -polish -remove -protocol refGene,icgc28,gnomad_exome,EAS.sites.2014_10,avsnp144,EAS.sites.2015_08,cosmic70,nci60  -operation g,f,f,f,f,f,f,f --otherinfo -csvout

# Annotation
#/lustre/home/acct-medkwf/medkwf4/software/annovar/convert2annovar.pl --format vcf4 --includeinfo --withzyg ${filter_snv} > ${annovar_aviinput}
#/lustre/home/acct-medkwf/medkwf4/software/annovar/convert2annovar.pl --format vcf4 --includeinfo --withzyg ${filter_indel} > ${annovar_indel_aviinput}
#cat ${annovar_aviinput} ${annovar_indel_aviinput} > ${annovar_merged_input}
#/lustre/home/acct-medkwf/medkwf4/software/annovar/table_annovar.pl ${annovar_merged_input} /lustre/home/acct-medkwf/medkwf4/software/annovar/humandb -buildver hg19 -out ${annovar_annotated} -polish -remove -protocol refGene,icgc28,gnomad_exome,EAS.sites.2014_10,avsnp144,EAS.sites.2015_08,cosmic70,nci60  -operation g,f,f,f,f,f,f,f --otherinfo -csvout

